/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { HoneyCheck, HoneyCheckInterface } from "../HoneyCheck";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "idexRouterAddres",
        type: "address",
      },
    ],
    name: "honeyCheck",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "buyResult",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance2",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellResult",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sellCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expectedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct honeyCheckerV5.HoneyResponse",
        name: "response",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IDEXRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class HoneyCheck__factory {
  static readonly abi = _abi;
  static createInterface(): HoneyCheckInterface {
    return new Interface(_abi) as HoneyCheckInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HoneyCheck {
    return new Contract(address, _abi, runner) as unknown as HoneyCheck;
  }
}
